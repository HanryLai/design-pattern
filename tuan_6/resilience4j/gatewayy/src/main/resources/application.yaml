spring:
  application:
    name: gateway-service
  cloud:
    gateway:
      routes:
        - id: user_route
          uri: http://localhost:8080
          predicates:
            - Path=/api/user/**
          filters:
            - StripPrefix=1
            # Circuit Breaker
            - name: CircuitBreaker
              args:
                name: userCircuitBreaker
                fallbackUri: forward:/fallback
            # Retry
            - name: Retry
              args:
                retries: 3
                methods: GET
                backoff:
                  firstBackoff: 100ms
                  maxBackoff: 1000ms
                  factor: 2
                  basedOnPreviousValue: true
            # Timeout
            - name: RequestTimeout
              args:
                timeout: PT2S  # 2 giây, dùng ??nh d?ng ISO-8601
            # Rate Limiter
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1

# Resilience4j Configuration
resilience4j:
  circuitbreaker:
    instances:
      userCircuitBreaker:
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 5
        failureRateThreshold: 50
        waitDurationInOpenState: PT10S  # 10 giây

# Redis Configuration
spring:
  data:
    redis:
      host: localhost
      port: 6379

# Server Configuration
server:
  port: 9000

# Actuator (tùy ch?n)
management:
  endpoints:
    web:
      exposure:
        include: "*"